Ф-ия App возвращает разметку

Компонента - ф-ия, возвращающая разметку JSX
Компоненты могут использоваться внутри друг друга

function App() {
  return (
    <div className="App">
      
    </div>
  );
}

const App = () => {
  return (
    <div className="App">
      
    </div>
  );
}

Компонента в итоге возвращает один тег

-------------------------------------------------------------------------------------

Как использовать? 
Ф-ию App мы нигде не вызываем.
Теперь у нас есть тег <App></App>, который мы можем куда-то вставлять и использовать.

Внутри файла index.html будет отрисовываться js внутри тега <div id="root"></div> (SPA)

Внутри файла index.js мы отрисовывем тег App
render() - отрисовать

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

----------------------------------------------------------------------------------
import
import App from './App';
что импортируем и откуда

export
export default App;
что экспортируем и куда (одно что-то)

./ - относительный путь (относительно папки, в которой я нахожусь)
./../ - на папку выше

-------------------------------------------------------------------------------------
Чтобы писать js код внутри разметки jsx - нужно обернуть его в в фигурные скобки

<div className={classes.item}>
  <img src=""/>
  {props.message}
</div>

JXS - html внутри JS

-----------------------------------------------------------------------------------
props - параметры для Компоненты

Но мы никогда не вызываем нашу ф-ию (Компоненту), а просто используем тег.
Так как же передавать параметры (пропсы)?

Так как Компонента - это тег, мы настраиваем ее с помощью атрибутов

const Post = (props) => {
console.log(props.message)

    return (
            <div className={classes.item}>
              <img src="" />
              {props.message}
            </div>
    )
}

<Post message='hi, how are you'></Post>
<Post message="it's my first post"></Post>

Мы в ф-ию Post передали параметр props. А компоненту post настроили с тегом message. 
Теперь внутри ф-ии Post мы можем обращаться к значениям message через конструкцию: {props.message}
и результат ф-ии будет динамичный

----------------------------------------------------------------------------------
npm i react-router-dom -save



debugger
proto


